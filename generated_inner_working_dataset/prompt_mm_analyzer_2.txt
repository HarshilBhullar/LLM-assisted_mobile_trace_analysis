Prompt: I want you to define a class `ModifiedMmAnalyzer` that inherits from a base `Analyzer` class, and analyzes the MM state changes with specific enhancements:

1. Class Definition: `ModifiedMmAnalyzer`
This class extends from a base `Analyzer` class and is designed to track and analyze various MM state changes and events. It should use the `set_source` method to configure and enable specific logs, particularly focusing on LTE and UMTS networks. The class should define several methods to return logs of different types of network activities like normal service spans, PLMN search spans, attach spans, and others for both LTE and UMTS networks.

2. Span Tracking:
The class should maintain a list of `Span` objects for different network activities like normal service, PLMN search, attach, etc., for both LTE and UMTS networks. It should be able to start and end spans based on specific events and conditions, utilizing helper functions like `start_span` and `end_span`.

3. Event Callback Function: `__filter`
Implement a callback function `__filter` that processes different types of events. Depending on the event type, it should invoke specific handling methods to update the state logs. This includes handling for LTE NAS EMM, LTE NAS, LTE RRC OTA, and UMTS NAS events, among others.

4. Additional Callback Functions:
Define additional functions to handle specific event types:
   - `__callback_umts_nas_gmm`: Handles UMTS NAS GMM events to track normal service and PLMN search spans.
   - `__callback_wcdma_rrc_ota`: Processes WCDMA RRC OTA messages to extract and log cell information.
   - `__callback_lte_rrc_ota`: Handles LTE RRC OTA messages to track configuration changes and cell reselection information.
   - Implement any other necessary callbacks to handle specific signaling messages and update corresponding state logs.

5. Output Methods:
Provide methods to retrieve logs for different spans, such as `get_umts_normal_service_log`, `get_lte_attach_log`, etc., which return the time spans for various network activities.

6. Additional Features:
Incorporate any additional processing logic to track custom LTE events or specific configurations, such as DRX configurations or cell reselection details. This may involve processing custom event types or extracting specific details from messages.

The `ModifiedMmAnalyzer` is intended to be used as part of an outer analyzer script that sets up the data source and runs the analysis. The class should be robust and handle out-of-order timestamps effectively, ensuring that the logs accurately reflect the progression of network states.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, MmAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    mm_analyzer = MmAnalyzer()
    mm_analyzer.set_source(src)

    # Start the monitoring
    src.run()