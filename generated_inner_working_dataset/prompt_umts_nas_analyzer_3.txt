Prompt: I want you to define a class `UmtsNasAnalyzerModified` that inherits from a base `ProtocolAnalyzer` class, and is used to analyze UMTS NAS layer events:

1. Class Definition: `UmtsNasAnalyzerModified`
- The class should extend from `ProtocolAnalyzer` and should be initialized to log the information about the class being initiated.
- It must set up source callbacks for all UMTS NAS layer packets (MM/GMM/CM/SM) by utilizing the `__nas_filter` function.
- In this function, it should filter and process packets based on their type, i.e., `UMTS_NAS_MM_State`, `UMTS_NAS_MM_REG_State`, `UMTS_NAS_GMM_State`, and `UMTS_NAS_OTA_Packet`.

2. State Machines and Profiles:
- Create state machines for MM, GMM, and CM states using the methods `create_mm_state_machine`, `create_gmm_state_machine`, and `create_cm_state_machine`. Each state machine should define state transitions based on specific conditions extracted from packet data.
- Implement a method `create_profile_hierarchy` to return a `ProfileHierarchy` specific to UMTS NAS settings.

3. Callback Functions:
- Implement `__callback_mm_state`, `__callback_mm_reg_state`, `__callback_gmm_state`, and `__callback_nas` functions to update and log status information.
- These functions should extract relevant information from the incoming messages and update the internal status representations (`MmStatus`, `GmmStatus`, `MmNasStatus`).
- Log additional info under a field `additional_info` with the value "Modified Analyzer" in the broadcasted state information.

4. Set Source Configuration:
- Implement a `set_source` method that enables the necessary MM/GMM/CM/SM logs for UMTS NAS analysis.
- The source should enable logs for `UMTS_NAS_OTA_Packet`, `UMTS_NAS_GMM_State`, `UMTS_NAS_MM_State`, and `UMTS_NAS_MM_REG_State`.

This class will be used by an outer analyzer script to process logs and evaluate UMTS NAS layer metrics.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, UmtsNasAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    umts_nas_analyzer = UmtsNasAnalyzer()
    umts_nas_analyzer.set_source(src)

    # Start the monitoring
    src.run()