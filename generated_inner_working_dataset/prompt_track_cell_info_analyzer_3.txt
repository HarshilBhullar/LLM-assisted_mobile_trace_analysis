Prompt: I want you to define a class `TrackCellInfoAnalyzerModified` that inherits from a base `Analyzer` class, and provides insights on LTE Radio Resource Control (RRC) protocol cell information:

1. Class Definition: `TrackCellInfoAnalyzerModified`
The class should initialize a `LteRrcStatus` object to maintain the current status of the cell. It sets up callbacks to process specific LTE RRC messages, such as `LTE_RRC_Serv_Cell_Info` and `LTE_RRC_MIB_Packet`. This involves decoding these messages and updating the cell status with relevant information like downlink frequency, uplink frequency, bandwidth, and operator details based on MNC values.

2. Message Processing Functions:
   - `__rrc_filter`: This function filters all LTE RRC packets and processes them through specific callbacks.
   - `__callback_serv_cell`: Updates the current cell status using the `LTE_RRC_Serv_Cell_Info` message. It checks if the status is initialized, and if not, it uses the message data to set frequencies, bandwidths, and cell IDs. Additionally, it determines the operator based on the MNC value. If there is a change in frequency, cell ID, or TAC, it updates the status and logs the change.
   - `__callback_mib_cell`: Processes `LTE_RRC_MIB_Packet` to extract MIB information such as the number of antennas and downlink bandwidth.

3. Source Configuration:
   - `set_source`: Configures the analyzer to enable and process specific LTE RRC messages needed for analysis, such as `LTE_RRC_Serv_Cell_Info` and `LTE_RRC_MIB_Packet`.

4. Getter Functions:
   - Provide methods to retrieve current cell information such as cell ID, TAC, downlink and uplink frequencies, bandwidths, allowed access, operator, and band indicator.

5. Usage in Outer Analyzer Script:
   - The outer analyzer script will utilize this custom `TrackCellInfoAnalyzerModified` class to track and log detailed cell information as it processes the logs provided by an `OfflineReplayer`. It enables specific logs and instantiates the analyzer to capture and log cell status changes, ensuring detailed monitoring of LTE RRC protocol messages.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, TrackCellInfoAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    track_cell_info_analyzer = TrackCellInfoAnalyzer()
    track_cell_info_analyzer.set_source(src)

    # Start the monitoring
    src.run()