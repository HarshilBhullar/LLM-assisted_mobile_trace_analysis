Prompt: I want you to define a class `ModifiedWcdmaRrcAnalyzer` that inherits from a base `ProtocolAnalyzer` class and provides enhanced metrics for WCDMA (3G) RRC analysis:

1. Class Definition: `ModifiedWcdmaRrcAnalyzer`
   - This class should extend from the `ProtocolAnalyzer` base class and include the necessary imports such as `xml.etree.ElementTree` for XML processing.
   - Initialize packet filters and add source callbacks to process WCDMA RRC packets.
   - Maintain internal states to track the current cell status, cell history, and configurations.
   - Implement a state machine to manage various RRC states like CELL_FACH, CELL_DCH, URA_PCH, CELL_PCH, and IDLE. Define transition functions for state changes based on incoming messages.
   - Create methods to filter and process different types of WCDMA RRC messages, updating cell status and configurations as needed.

2. Functionality Requirements:
   - The analyzer should be capable of enabling logs for WCDMA RRC messages, specifically "WCDMA_RRC_OTA_Packet", "WCDMA_RRC_Serv_Cell_Info", and "WCDMA_RRC_States".
   - Implement callback methods to handle RRC state updates, service cell information, and SIB configurations.
   - Modify existing RRC metrics such as thresholds and priorities in SIB configurations to reflect changes in the protocol analysis.
   - Provide methods to retrieve the list of associated cell IDs, current cell status, and configurations.

3. Execution Logic
   - This class should be capable of running within an outer analyzer script, which will initialize an `OfflineReplayer`, set input paths, and enable specific logs.
   - Ensure that the `ModifiedWcdmaRrcAnalyzer` is properly linked to the source and capable of processing the logs to extract and store enhanced RRC metrics.
   - The class should be designed to work seamlessly with the outer analyzer script to analyze logs and output modified metrics for WCDMA RRC analysis.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, WcdmaRrcAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    wcdma_rrc_analyzer = WcdmaRrcAnalyzer()
    wcdma_rrc_analyzer.set_source(src)  # bind with the monitor

    # Start the monitoring
    src.run()