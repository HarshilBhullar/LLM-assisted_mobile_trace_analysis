Prompt: I want you to define a class `ModifiedWcdmaRrcAnalyzer` that inherits from a base `ProtocolAnalyzer` class, and returns modified metrics for WCDMA RRC analysis:

1. Class Definition: `ModifiedWcdmaRrcAnalyzer`
This class extends from `ProtocolAnalyzer` and is designed to analyze WCDMA (3G) Radio Resource Control (RRC) protocol with adjusted metrics. It should initialize packet filters and internal states, including a state machine for RRC states. The class should provide methods to handle WCDMA RRC messages, update the state machine, and process different message types such as serving cell information, RRC states, and OTA packets. It should extract configurations from System Information Blocks (SIBs), and maintain a history of cell status and configurations.

2. State Machine: `create_state_machine`
Define a state machine for WCDMA RRC states, including transitions between states like CELL_FACH, CELL_DCH, URA_PCH, CELL_PCH, and IDLE. Implement transition functions to determine when to move between these states based on message content.

3. Message Handling: 
Implement a message filter `__rrc_filter` to process relevant WCDMA RRC packets and call specific callback functions such as `__callback_rrc_state` for RRC state changes, `__callback_serv_cell` for serving cell information, and `__callback_sib_config` for SIB configurations. Ensure the class can decode and log these messages appropriately.

4. Configuration Management:
Maintain a configuration and status mapping for different cells, storing information about cell IDs, frequencies, and other parameters. Provide methods to retrieve current cell configurations and a list of cells associated with the device.

5. Profile Hierarchy:
Implement a method `create_profile_hierarchy` to define a hierarchy of profiles for WCDMA RRC, categorizing configurations into idle and active states, and providing metadata for status.

6. Execution Logic:
The `ModifiedWcdmaRrcAnalyzer` is to be used in an outer script to monitor logs and analyze WCDMA RRC protocol metrics. It should be capable of broadcasting information about RRC states and configurations, and updating profiles based on the analyzed data.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, WcdmaRrcAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    wcdma_rrc_analyzer = WcdmaRrcAnalyzer()
    wcdma_rrc_analyzer.set_source(src)  # bind with the monitor

    # Start the monitoring
    src.run()