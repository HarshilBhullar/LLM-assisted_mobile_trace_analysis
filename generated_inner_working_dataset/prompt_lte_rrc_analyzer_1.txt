Prompt: I want you to define a class `LteRrcAnalyzerModified` that inherits from a base `ProtocolAnalyzer` class, and provides additional metrics for LTE Radio Resource Control (RRC) protocol.

1. Class Definition: `LteRrcAnalyzerModified`
   - This class extends from a base `ProtocolAnalyzer` class. It should include a `create_state_machine` method to declare a state machine for LTE RRC states.
   - The constructor initializes the base class, sets up source callbacks, and initializes internal states to track current cell status, cell history, and configurations.
   - Implement the `set_source` method to enable LTE RRC messages like `LTE_RRC_OTA_Packet`, `LTE_RRC_Serv_Cell_Info`, and `LTE_RRC_CDRX_Events_Info`.

2. State Machine Logic:
   - Define state transitions such as from `RRC_IDLE` to `RRC_CRX` and vice versa based on specific message types and fields.
   - Use helper functions within `create_state_machine` to determine when transitions occur based on incoming messages.

3. Callback Functions:
   - Implement `__rrc_filter` to process incoming messages and call appropriate callback functions.
   - Define `__callback_sib_config` to extract configurations from System Information Blocks (SIBs), including radio assessment thresholds and preference settings.
   - Implement `__callback_rrc_reconfig` to process RRC Reconfiguration messages and extract measurement profiles and configurations.
   - Ensure each callback function updates internal states and broadcasts relevant information for further analysis.

4. Execution and Integration:
   - The `LteRrcAnalyzerModified` class is to be used in conjunction with an outer analyzer script that sets up an `OfflineReplayer` and uses the `LteRrcAnalyzerModified` to analyze LTE RRC protocol messages from logs.
   - The class should be capable of being integrated into the outer analyzer script to provide detailed insights and metrics based on the processed RRC messages.
#!/usr/bin/python
# Filename: offline-analysis-example.py
import os
import sys

"""
Offline analysis by replaying logs
"""

# Import MobileInsight modules
from mobile_insight.monitor import OfflineReplayer
from mobile_insight.analyzer import MsgLogger, LteRrcAnalyzer

if __name__ == "__main__":

    # Initialize a monitor
    src = OfflineReplayer()
    src.set_input_path("./logs/")
    # src.enable_log_all()

    src.enable_log("LTE_PHY_Serv_Cell_Measurement")
    src.enable_log("5G_NR_RRC_OTA_Packet")
    src.enable_log("LTE_RRC_OTA_Packet")
    src.enable_log("LTE_NB1_ML1_GM_DCI_Info")

    logger = MsgLogger()
    logger.set_decode_format(MsgLogger.XML)
    logger.set_dump_type(MsgLogger.FILE_ONLY)
    logger.save_decoded_msg_as("./test.txt")
    logger.set_source(src)

    lte_rrc_analyzer = LteRrcAnalyzer()
    lte_rrc_analyzer.set_source(src)  # bind with the monitor

    # Start the monitoring
    src.run()